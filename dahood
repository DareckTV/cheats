--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.2) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then local v75=0;while true do if (v75==0) then v19=v0(v3(v20,1,1));return "";end end else local v76=0;local v77;while true do if (0==v76) then v77=v2(v0(v20,16));if v19 then local v98=v5(v77,v19);v19=nil;return v98;else return v77;end break;end end end end);local function v21(v22,v23,v24)if v24 then local v78=(0 + 0) -0;local v79;while true do if (v78==(0 + 0)) then v79=(v22/((174 -(70 + 102))^(v23-(1 + (0 -0)))))%((1 + 1)^(((v24-(1037 -(303 + 733))) -(v23-(1 -(0 -0)))) + 1 + 0));return v79-(v79%1);end end else local v80=(1 + 1)^(v23-(1 -0));return (((v22%(v80 + v80))>=v80) and (1304 -(884 + 419))) or (0 + 0);end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1;return v38;end local function v26()local v39,v40=v1(v16,v18,v18 + (191 -(110 + 79)));v18=v18 + 1 + 1;return (v40 * (1264 -1008)) + v39;end local function v27()local v41=(972 -354) -(333 + 285);local v42;local v43;local v44;local v45;while true do if (v41==0) then v42,v43,v44,v45=v1(v16,v18,v18 + (3 -0));v18=v18 + 4;v41=2 -1;end if (v41==(1 + 0)) then return (v45 * 16777216) + (v44 * (40382 + 25154)) + (v43 * (372 -116)) + v42;end end end local function v28()local v46=692 -(153 + 163 + 376);local v47;local v48;local v49;local v50;local v51;local v52;while true do if (v46==(3 -(5 -3))) then v49=317 -(230 + 86);v50=(v21(v48,1 + 0 + 0,11 + 9) * ((7 -5)^(1431 -(1241 + (1559 -(665 + 736)))))) + v47;v46=168 -(35 + 131);end if (v46==(8 -5)) then if (v51==(0 + 0)) then if (v50==(0 + 0)) then return v52 * 0;else local v99=0;while true do if (v99==(0 -0)) then v51=1982 -((1614 -1054) + 1421);v49=0 -0;break;end end end elseif (v51==(410 + 1637)) then return ((v50==(0 + (0 -0))) and (v52 * ((1 + 0 + 0)/(0 -0)))) or (v52 * NaN);end return v8(v52,v51-1023) * (v49 + (v50/((1 + 1)^((351 -176) -(47 + 76)))));end if (v46==(398 -(202 + 196))) then v47=v27();v48=v27();v46=2 -1;end if (v46==(1798 -((3398 -1959) + 357))) then v51=v21(v48,8 + 13,12 + 19);v52=((v21(v48,29 + 3)==(2 -1)) and  -(803 -(590 + 212))) or 1;v46=3 + 0;end end end local function v29(v30)local v53;if  not v30 then v30=v27();if (v30==(771 -(635 + 136))) then return "";end end v53=v3(v16,v18,(v18 + v30) -(1 + 0));v18=v18 + v30;local v54={};for v67=1, #v53 do v54[v67]=v2(v1(v3(v53,v67,v67)));end return v6(v54);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v55=0 + 0;local v56;local v57;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v55==(1 + 0)) then v58=nil;v59=nil;v55=3 -1;end if (v55~=0) then else v56=131 -(55 + 76);v57=nil;v55=1;end if (2~=v55) then else v60=nil;v61=nil;v55=3 + 0;end if (v55~=(1 + 3)) then else while true do if (v56~=3) then else v63=nil;while true do local v100=0;local v101;while true do if (0==v100) then v101=0 + 0;while true do if (v101~=1) then else if (v57~=(706 -(99 + 605))) then else local v108=0;local v109;while true do if (v108~=0) then else v109=145 -(106 + 39);while true do if (v109==0) then for v115=1 -0,v27() do local v116=0;local v117;while true do if (v116~=0) then else v117=v25();if (v21(v117,1 + 0,1 -0)~=0) then else local v239=0;local v240;local v241;local v242;local v243;while true do if (v239==(2 -1)) then local v263=0;while true do if (0==v263) then v242=nil;v243=nil;v263=1;end if (v263~=(3 -2)) then else v239=2;break;end end end if ((0 -0)~=v239) then else local v264=0;local v265;while true do if (v264==(0 -0)) then v265=0;while true do if (1~=v265) then else v239=1;break;end if (v265~=0) then else local v335=0;while true do if (v335==(35 -(16 + 18))) then v265=2 -1;break;end if (v335==(1666 -(1185 + 481))) then v240=1355 -(5 + 1350);v241=nil;v335=1354 -(523 + 830);end end end end break;end end end if (v239==(276 -(48 + 226))) then while true do if (v240~=(405 -(92 + 310))) then else if (v21(v242,3,3)==1) then v243[10 -6]=v63[v243[82 -(53 + 25)]];end v58[v115]=v243;break;end if ((2 + 0)~=v240) then else local v303=0 -0;while true do if (v303~=1) then else v240=10 -7;break;end if (v303~=(0 -0)) then else local v336=0 + 0;local v337;while true do if (v336~=(0 + 0)) then else v337=1202 -(948 + 254);while true do if ((3 -2)~=v337) then else v303=1;break;end if (0~=v337) then else local v361=0;while true do if (v361~=0) then else if (v21(v242,1 + 0,1)==1) then v243[4 -2]=v63[v243[1 + 1]];end if (v21(v242,2,2)~=1) then else v243[10 -7]=v63[v243[3]];end v361=1;end if (v361~=(4 -3)) then else v337=1 + 0;break;end end end end break;end end end end end if (v240==(870 -(66 + 803))) then local v304=0;local v305;local v306;while true do if (v304==(0 + 0)) then v305=0 -0;v306=nil;v304=1248 -(506 + 741);end if (v304==1) then while true do if (v305~=(0 -0)) then else v306=0;while true do if (v306~=1) then else v240=2;break;end if ((1814 -(566 + 1248))~=v306) then else local v362=0 -0;while true do if (v362==(1 + 0)) then v306=2 -1;break;end if (v362==(0 + 0)) then v243={v26(),v26(),nil,nil};if (v241==0) then local v377=0;local v378;local v379;while true do if (v377~=(1418 -(1173 + 244))) then else while true do if (0~=v378) then else v379=0;while true do if (v379==0) then v243[839 -(314 + 522)]=v26();v243[1 + 3]=v26();break;end end break;end end break;end if (v377~=(0 + 0)) then else v378=1259 -(213 + 1046);v379=nil;v377=1206 -(659 + 546);end end elseif (v241==1) then v243[3]=v27();elseif (v241==(2 + 0)) then v243[8 -5]=v27() -((2 + 0)^(249 -(133 + 100)));elseif (v241~=3) then else local v385=0 + 0;local v386;local v387;while true do if (v385~=(1174 -(54 + 1119))) then else while true do if (v386==0) then v387=0;while true do if (v387==(0 + 0)) then v243[3]=v27() -((1860 -(926 + 932))^16);v243[4]=v26();break;end end break;end end break;end if (v385==0) then v386=0 -0;v387=nil;v385=1 + 0;end end end v362=1;end end end end break;end end break;end end end if (v240~=(0 -0)) then else local v307=0;local v308;local v309;while true do if (1~=v307) then else while true do if (v308==(0 -0)) then v309=1933 -(477 + 1456);while true do if (v309==0) then v241=v21(v117,83 -(15 + 66),8 -5);v242=v21(v117,4,4 + 2);v309=1 + 0;end if (v309==1) then v240=973 -(586 + 386);break;end end break;end end break;end if (v307==(1836 -(866 + 970))) then v308=0 -0;v309=nil;v307=1 + 0;end end end end break;end end end break;end end end for v118=2 -1,v27() do v59[v118-1]=v33();end v109=790 -(775 + 14);end if (v109==1) then for v120=1 + 0,v27() do v60[v120]=v27();end return v61;end end break;end end end break;end if (v101==(1284 -(724 + 560))) then local v107=0;while true do if (0~=v107) then else if (v57~=1) then else local v112=0 + 0;while true do if (v112~=(984 -(55 + 927))) then else v57=1512 -(548 + 962);break;end if (1~=v112) then else for v122=1 + 0,v62 do local v123=0;local v124;local v125;local v126;while true do if (v123~=(1 + 0)) then else v126=nil;while true do if (v124~=(3 -2)) then else if (v125==1) then v126=v25()~=0;elseif (v125==(2 -0)) then v126=v28();elseif (v125==(2 + 1)) then v126=v29();end v63[v122]=v126;break;end if (v124~=(0 + 0)) then else local v252=103 -(78 + 25);while true do if (v252==1) then v124=1 + 0;break;end if (v252~=0) then else v125=v25();v126=nil;v252=1;end end end end break;end if (v123==0) then local v230=0 -0;while true do if (v230~=(0 + 0)) then else v124=0;v125=nil;v230=1 + 0;end if (v230~=1) then else v123=1 -0;break;end end end end end v61[3]=v25();v112=2;end if (v112==(175 -(174 + 1))) then v62=v27();v63={};v112=1;end end end if (v57==0) then local v113=0 -0;while true do if (0~=v113) then else v58={};v59={};v113=1 -0;end if (v113~=(1 + 1)) then else v57=1;break;end if (v113==(1 + 0)) then v60={};v61={v58,v59,nil,v60};v113=1442 -(965 + 475);end end end v107=4 -3;end if (v107==1) then v101=1355 -(1231 + 123);break;end end end end break;end end end break;end if (v56==2) then local v91=0;while true do if (0~=v91) then else v61=nil;v62=nil;v91=3 -2;end if (v91~=(1 -0)) then else v56=1 + 2;break;end end end if (v56~=(0 + 0)) then else local v92=1534 -(1010 + 524);while true do if (v92==0) then v57=0;v58=nil;v92=2 -1;end if (v92==1) then v56=1800 -(1227 + 572);break;end end end if (v56==(1502 -(658 + 843))) then local v93=1206 -(305 + 901);while true do if (v93~=0) then else v59=nil;v60=nil;v93=1;end if (v93==1) then v56=2 -0;break;end end end end break;end if (v55==(1865 -(105 + 1757))) then v62=nil;v63=nil;v55=4;end end end local function v34(v35,v36,v37)local v64=v35[1];local v65=v35[2];local v66=v35[3];return function(...)local v69=0;local v70;local v71;local v72;local v73;local v74;while true do if (v69==2) then v74=nil;v74=function()local v81=v64;local v82=v65;local v83=v66;local v84=v32;local v85={};local v86={};local v87={};for v94=(0 + 0) -0,v73 do if ((v94>=v83) or ((9998 -5384)==(3080 -(59 + 47 + 235)))) then v85[v94-v83]=v72[v94 + (1159 -(932 + 226))];else v87[v94]=v72[v94 + 1];end end local v88=(v73-v83) + ((1 + 2) -(7 -5));local v89;local v90;while true do local v95=0 -0;local v96;while true do if ((v95==(160 -(14 + 66 + 80))) or ((257 + 751)==(4915 -2491))) then v96=0;while true do if ((v96==(397 -(291 + 105))) or ((1955 -808)>=2284)) then if (((570 -372)<3409) and (v90<=(35 -11))) then if ((((146 + 589) -502)<2009) and (v90<=(11 + 0))) then if ((v90<=(9 -4)) or (652>=(1281 + 1226))) then if (((838 + 393)<=(6343 -4243)) and (v90<=(2 + 0))) then if (((8617 -6370)==(3401 -(205 + 949))) and (v90<=(0 -0))) then v87[v89[2]]=v87[v89[356 -(276 + 77)]] + v89[1051 -(780 + 267)];elseif ((v90>(224 -(6 + 217))) or ((164 + (3082 -2196))>(3846 -(62 + 606 + 471)))) then local v161=0 -0;local v162;local v163;while true do if ((v161==(1 -0)) or ((1741 -(207 + 82))==2161)) then while true do if (((12465 -(25673 -17817))>2144) and ((0 -0)==v162)) then v163=v89[726 -((1709 -1083) + 19 + 79)];v87[v163]=v87[v163]();break;end end break;end if (((2851 -(1471 -(350 + 5)))==(5776 -4041)) and (v161==0)) then v162=0 -0;v163=nil;v161=(1654 -(266 + 1385)) -2;end end else v36[v89[6 -3]]=v87[v89[1981 -(574 + 1405)]];end elseif ((v90<=(1562 -(571 + (2778 -(150 + 1640))))) or ((4461 -((702 -147) + 1411))==(14380 -10120))) then local v128=0;local v129;local v130;local v131;local v132;local v133;while true do if ((v128==((1 + 2) -2)) or ((97 + 102)>=(3114 -(84 + 999)))) then v131=nil;v132=nil;v128=2 + 0;end if (((148 -(65 + 81))==v128) or ((1874 -(817 + 470))>=(2655 + 1630))) then v133=nil;while true do if (((6720 -2335)==(16431 -12046)) and (v129==0)) then local v253=0;while true do if ((v253==(1294 -(98 + 1196))) or ((8777 -6058)<(1446 -948))) then v130=0 + 0 + 0;v131=nil;v253=3 -2;end if ((v253==(1 + 0)) or ((8733 -5813)<=(23 + 1))) then v129=1956 -(162 + 1793);break;end end end if ((v129==(2 + 0)) or ((2850 -(247 + (974 -467)))<=(4128 -(2856 + 231)))) then while true do if ((v130==(0 -0)) or ((586 + (4660 -(1254 + 41)))<=(4885 -2222))) then local v286=0 + 0;local v287;while true do if (((3314 -(2859 -(45 + 443)))<2147) and (v286==(749 -(235 + 514)))) then v287=0;while true do if ((v287==(1203 -(612 + 591))) or ((7908 -4597)<=(2744 + 255))) then local v341=94 -(39 + 55);while true do if ((v341==(3 -2)) or (1779<=(859 -145))) then v287=1 + 0;break;end if ((v341==(0 -0)) or ((6665 -4788)>=(4877 -(13 + 88)))) then v131=v89[1584 -(976 + 606)];v132={v87[v131](v13(v87,v131 + (1171 -(305 + 865)),v71))};v341=(1587 -(77 + 75)) -(579 + 855);end end end if ((1==v287) or ((691 -325)>(176 + 3495))) then v130=1 + 0;break;end end break;end end end if ((v130==(1355 -(126 + (3447 -2219)))) or ((2431 -(1023 + 37))>(798 + 3362))) then v133=1804 -(853 + 951);for v294=v131,v89[1742 -(969 + 769)] do local v295=0;local v296;while true do if ((v295==(409 -(241 + 168))) or ((1328 + 140)==4353)) then v296=0;while true do if (((2525 -(513 + 1100))<3456) and (v296==(433 -(153 + 94 + 186)))) then v133=v133 + 1 + 0;v87[v294]=v132[v133];break;end end break;end end end break;end end break;end if ((v129==(1995 -(62 + (4617 -2685)))) or (4035==(1028 -(41 + 80)))) then v132=nil;v133=nil;v129=2 + 0;end end break;end if ((4798>(5809 -((1412 -(127 + 53)) + 402))) and (v128==(0 -0))) then v129=0 -0;v130=nil;v128=20 -(13 + 6);end end elseif ((((2754 + 1028) -(1852 + 627))>=199) and (v90==(4 + 0))) then local v166=0 + 0;local v167;local v168;local v169;local v170;local v171;while true do if ((v166==(7 -5)) or (2798>=((7853 -4579) -(300 + 94)))) then v171=nil;while true do if ((v167==(1866 -(403 + (2393 -930)))) or ((12152 -8864)==(1995 + 2136))) then local v268=0 -0;while true do if ((v268==(1098 -(962 + 135))) or ((2150 -(22 + 7))<=(458 -226))) then v167=1 + 0;break;end if (((1017 + (1379 -653))>=647) and ((0 -0)==v268)) then v168=0;v169=nil;v268=1 + 0;end end end if ((2==v167) or (2071==(5954 -(1097 + 89)))) then while true do if (((992 -357)==(2628 -(645 + (1930 -(346 + 236))))) and (v168==(2 -0))) then for v321=1 + 0,v89[2 + 2] do local v322=246 -(5 + 241);local v323;while true do if ((((7810 + 6893) -10094)==4609) and (v322==(3 -2))) then if (((870 + (4398 -2924))<(3154 -((1725 -(196 + 1375)) + 180))) and (v323[1 + (0 -0)]==(387 -(345 + 20)))) then v171[v321-(1 + 0)]={v87,v323[2 + 1]};else v171[v321-(1 + 0)]={v36,v323[1631 -(592 + 1036)]};end v86[ #v86 + (485 -(235 + 249))]=v171;break;end if (((2774 + (679 -405))>919) and (v322==(0 + (0 -0)))) then v70=v70 + (1636 -(755 + 880));v323=v81[v70];v322=2 -1;end end end v87[v89[1591 -(424 + 1165)]]=v34(v169,v170,v37);break;end if ((v168==1) or ((2293 + 2420)<(5323 -2473))) then local v311=0 + 0;local v312;while true do if ((v311==(1635 -(813 + 822))) or ((17308 -13118)==((6290 + 526) -((1727 -(522 + 53)) + 702)))) then v312=1951 -(862 + 1089);while true do if ((((979 + 115) -(214 + 479))<(1686 + 2006)) and (v312==1)) then v168=3 -1;break;end if ((v312==(0 -0)) or ((3973 -((2199 -1405) + 81))<=(2563 -(223 + 180)))) then local v353=0;while true do if (((2213 -1525)>=(135 + 57)) and (v353==(1 -0))) then v312=1 -0;break;end if ((((1778 + 433) -(245 + 167))>=((2736 -894) -745)) and (v353==(0 + 0))) then v171={};v170=v10({},{["__index"]=function(v363,v364)local v366=0 -0;local v367;local v368;local v369;while true do if (((7365 -4495)==(4784 -(1769 + 145))) and (v366==((861 -(108 + 72)) -(316 + 364)))) then v369=nil;while true do if ((v367==1) or ((2596 -(162 + 62))<(714 + 18))) then while true do if ((v368==(1221 -(948 + 61 + 212))) or ((1303 + 1190)==(1552 + 1646))) then local v384=0 + 0;while true do if (((2273 + 2085)>638) and (v384==(0 + 0))) then v369=v171[v364];return v369[1][v369[1 + 1]];end end end end break;end if ((v367==0) or (3297==3789)) then v368=0;v369=nil;v367=2 -1;end end break;end if ((v366==0) or (3270<(3103 -(1517 + 345)))) then v367=0;v368=nil;v366=415 -(155 + 259);end end end,["__newindex"]=function(v363,v364,v365)local v370=0;local v371;local v372;while true do if ((v370==(2 -1)) or (675>(3453 + 1349))) then while true do if ((v371==(0 -0)) or ((3797 -(62 + 1384))>=(3222 + 156 + 471))) then v372=v171[v364];v372[559 -(329 + 229)][v372[1 + 1]]=v365;break;end end break;end if ((v370==(0 -0)) or ((192 + 280)>=(2026 + 800))) then v371=0 -0;v372=nil;v370=1 + 0;end end end});v353=1 + 0;end end end end break;end end end if (((313 + 25)==338) and (v168==0)) then local v313=256 -(89 + 167);local v314;while true do if ((v313==0) or (((3070 -1943) + 350)<=(2969 -(330 + 916 + (726 -273))))) then v314=0 -0;while true do if ((v314==(0 + 0)) or ((805 + 358)>=2164)) then v169=v82[v89[3]];v170=nil;v314=1816 -(1501 + 314);end if (((3120 + 1111)<=(3762 + (1513 -(527 + 132)))) and (v314==(1892 -(1575 + 316)))) then v168=1 + 0;break;end end break;end end end end break;end if (((3573 -1209)<(4394 -((1738 -(1224 + 459)) + 25))) and (v167==(4 -3))) then v170=nil;v171=nil;v167=3 -(1 + 0);end end break;end if ((v166==(301 -((82 -29) + 247))) or ((944 + 3874)>=(8412 -3535))) then v169=nil;v170=nil;v166=2 + 0;end if (((5670 -2812)>(6392 -4205)) and (v166==(0 + 0))) then v167=0 -0;v168=nil;v166=2 -1;end end else local v172=1086 -(110 + 976);local v173;local v174;while true do if (((1627 -1198)<=(5148 -3750)) and (v172==(0 -0))) then v173=0 -0;v174=nil;v172=1;end if ((v172==(3 -2)) or ((4659 -(51 + 595))<((2198 + 105) -1022))) then while true do if (((5779 -4264)==1515) and (v173==(0 + 0))) then v174=v89[1402 -(108 + 1292)];v87[v174](v13(v87,v174 + (4 -3),v89[218 -(156 + 59)]));break;end end break;end end end elseif ((v90<=((9 + 19) -20)) or ((2716 -(126 + 154))<=(3 + 665))) then if (((4010 -2871)<(3290 -(7 + (1156 -711)))) and (v90<=(27 -21))) then local v134=0 + 0;local v135;local v136;local v137;while true do if ((v134==(65 -((45 -15) + 35))) or (((3153 + 1264) -(438 + 537))>=(4114 -(72 + 80)))) then v135=235 -(145 + (439 -349));v136=nil;v134=1989 -(1332 + 656);end if (((880 -540)<(6645 -4510)) and (v134==1)) then v137=nil;while true do if ((1442==((6193 -4285) -466)) and (v135==((257 -(169 + 87)) + 0))) then for v262=v136 + 1,v71 do v7(v137,v87[v262]);end break;end if (((1937 + 741)>(5 + 49)) and (v135==((607 -(527 + 80)) -0))) then v136=v89[1 + 0 + 1];v137=v87[v136];v135=1 + 0;end end break;end end elseif ((v90==7) or (((356 -106) + 3413)<(4675 -2154))) then local v175=(1397 -488) -((2465 -1752) + 196);local v176;local v177;while true do if ((1104<(1272 + 433)) and (v175==(1242 -(875 + 367)))) then local v244=0 -0;while true do if ((v244==(0 -0)) or ((1659 -(1116 + 286))==((3923 -3078) + 2306))) then v176=0 + 0;v177=nil;v244=1 + 0;end if ((((6549 -2767) -((2157 -1599) + (43 -28)))<(1762 + 3135)) and ((250 -(144 + 105))==v244)) then v175=1 -0;break;end end end if ((v175==(1995 -(876 + 64 + 1054))) or ((10748 -8594)>=4945)) then while true do if ((622<(1089 + 93 + 638)) and (0==v176)) then local v270=0 -0;while true do if ((1644>1165) and ((1 + 0)==v270)) then v176=(406 -(222 + 183)) -0;break;end if (((185 -(89 + 96))==v270) or (2738==1750)) then local v315=0 -0;while true do if ((4135>=((28651 -18156) -7850)) and (v315==(2 -1))) then v270=35 -((842 -(502 + 318)) + 12);break;end if (((0 + 0)==v315) or ((2989 -(51 + 1512))<1038)) then v177=v89[2 -0];v71=(v177 + v88) -1;v315=1979 -(330 + 1648);end end end end end if ((v176==(1 -0)) or ((517 + (2556 -(202 + 262)))<=(327 + 33))) then for v288=v177,v71 do local v289=0 + 0;local v290;while true do if ((v289==0) or ((2333 -(484 + 697))>(1850 + 2631))) then v290=v85[v288-v177];v87[v288]=v290;break;end end end break;end end break;end end elseif ((1073<=3821) and v87[v89[1073 -(218 + 853)]]) then v70=v70 + 1 + 0 + 0;else v70=v89[65 -(54 + 8)];end elseif ((v90<=(327 -(62 + 1 + (460 -205)))) or ((1470 -385)>(4983 -((1890 -(184 + 913)) + 1027)))) then for v159=v89[1 + 1],v89[966 -(371 + 592)] do v87[v159]=nil;end elseif (((13536 -9394)>(370 + 1499)) and (v90>(25 -15))) then v87[v89[1027 -(175 + 850)]]=v87[v89[6 -3]] -v87[v89[1312 -(1121 + 187)]];elseif ((v87[v89[2]]==v89[12 -8]) or ((5225 -(287 + 538))>=(1797 + 2982))) then v70=v70 + 1;else v70=v89[8 -5];end elseif ((v90<=17) or ((6035 -4163)<(3460 -2106))) then if ((4388>4035) and (v90<=(46 -32))) then if ((((3576 -1358) + 1222)>=(3097 -1977)) and (v90<=(22 -10))) then local v138=0;local v139;local v140;while true do if ((v138==(0 -0)) or ((7507 -3400)>(17934 -13357))) then v139=0 + 0;v140=nil;v138=518 -(332 + 185);end if ((v138==(581 -(143 + 437))) or ((4861 -2293)>(8072 -3189))) then while true do if ((v139==(0 + 0)) or ((2517 + 154)<=(2639 -(201 + 1709)))) then v140=v89[1596 -(989 + 336 + 269)];v87[v140]=v87[v140](v13(v87,v140 + 1 + 0,v71));break;end end break;end end elseif (((6017 -(937 + 292))==(6429 -(1243 + 398))) and (v90==13)) then v87[v89[1158 -((2218 -1454) + 392)]][v89[8 -5]]=v89[1764 -((1008 -(125 + 828)) + 1705)];else v87[v89[396 -(123 + 271)]]= not v87[v89[1736 -(782 + 951)]];end elseif ((v90<=(14 + 1)) or ((12832 -(4025 + 4558))==(2719 -(53 + 565)))) then v87[v89[(1992 -(1435 + 555)) + 0]]=v89[11 -8];elseif ((v90>(5 + 11)) or (2815>3591)) then if (((4058 -(311 + 1009))<(1327 + 1657)) and (v87[v89[2 -0]]<v87[v89[1 + 3]])) then v70=v70 + 1 + 0;else v70=v89[1808 -(837 + 968)];end else local v182=0 -(0 -0);local v183;while true do if ((v182==(1346 -(681 + 665))) or (918<=475)) then v183=v89[(2 -0) + 0];do return v87[v183](v13(v87,v183 + 1 + (0 -0),v71));end break;end end end elseif ((v90<=(97 -77)) or ((2267 -753)>=(4226 -(77 + 1694)))) then if ((v90<=(1560 -(831 + 711))) or (302<=(125 + 61))) then local v143=0 + 0;local v144;local v145;local v146;local v147;local v148;local v149;while true do if ((v143==1) or ((3565 -(1752 + 234))>=2492)) then v146=nil;v147=nil;v143=1629 -(465 + 1162);end if (((3399 + 587)>=539) and (v143==((9 -3) -3))) then while true do if ((3430<=(3200 + 745)) and ((1 + 0)==v144)) then local v258=0 + 0;while true do if (((3 -2)==v258) or ((131 + 380)>((26640 -20379) -(294 + 1555)))) then v144=2 + 0;break;end if ((4603<(6937 -(132 + 1861))) and (v258==(0 -0))) then v147=nil;v148=nil;v258=1 -0;end end end if (((2060 -1311)<=(9498 -6233)) and ((0 -0)==v144)) then local v259=0 + 0;while true do if ((v259==(1339 -(615 + 724))) or ((13042 -(24147 -14688))<=(7767 -4477))) then v145=0 -0;v146=nil;v259=2 -1;end if ((v259==1) or ((5364 -(361 + 1479))<=(3585 -(825 + 1087)))) then v144=1 + 0;break;end end end if ((v144==2) or (2786>4547)) then v149=nil;while true do if (((887 + 3561)>(15450 -11491)) and (v145==(1 + 1))) then for v297=v146,v71 do local v298=393 -(95 + 298);local v299;while true do if ((v298==(1399 -(662 + 737))) or ((2594 -(475 + 13))>((21776 -11963) -5994))) then v299=295 -(106 + 189);while true do if (((803 + 1850)<=(4904 -(171 + 33))) and (v299==(0 + (0 -0)))) then v149=v149 + 1;v87[v297]=v147[v149];break;end end break;end end end break;end if ((3703>(3575 -(300 + 662 + 371))) and (v145==(1686 -(1396 + 290)))) then local v291=0 -0;local v292;while true do if ((v291==0) or ((2590 -(317 + 911))>=(2680 + 860))) then v292=0 -0;while true do if ((1019>(160 -85)) and (v292==(920 -(154 + 766)))) then local v344=0;while true do if ((v344==(4 -3)) or (((6472 -(168 + 800)) -(795 + 593))<=(5517 -(510 + 894)))) then v292=911 -(424 + 486);break;end if ((v344==(0 + 0)) or (4813<=(9611 -7149))) then v146=v89[8 -6];v147,v148=v84(v87[v146](v13(v87,v146 + ((3775 -2026) -(526 + 1222)),v89[3])));v344=(4 + 0) -3;end end end if (((1852 + 2363)>(6509 -(1308 + 1262))) and ((1 -0)==v292)) then v145=1;break;end end break;end end end if ((276<(1669 -533)) and (v145==(1428 -(1048 + 379)))) then local v293=(0 -0) -0;while true do if ((2621<(5255 -(391 + 604))) and ((0 -0)==v293)) then local v326=(0 -0) + 0;while true do if ((4252==(3127 + 1125)) and (v326==0)) then v71=(v148 + v146) -(1 -0);v149=0;v326=1 + 0;end if ((v326==(1 + 0)) or ((9635 -6442)<(4092 -2596))) then v293=1;break;end end end if ((3930>(84 + 481)) and (v293==(613 -(208 + 404)))) then v145=504 -(149 + (577 -(190 + 34)));break;end end end end break;end end break;end if ((v143==(0 + 0)) or ((8292 -6025)>(4258 -((1716 -606) + 435)))) then v144=0;v145=nil;v143=2 -1;end if (((6853 -3536)>1591) and (v143==((1 + 6) -5))) then v148=nil;v149=nil;v143=291 -(167 + 121);end end elseif ((v90==19) or ((110 + 1381)<(137 + 678 + 486))) then if ((3786<(5500 -1347)) and  not v87[v89[184 -(160 + 22)]]) then v70=v70 + 1 + 0;else v70=v89[2 + 1];end elseif ((v87[v89[1159 -(166 + 991)]]~=v87[v89[4 + 0]]) or ((11910 -7564)<(643 + 1357))) then v70=v70 + (1 -0);else v70=v89[2 + 1];end elseif ((v90<=(33 -11)) or (4082<=(3936 -2950))) then if (((11398 -(38706 -30397))<(10149 -6333)) and (v90>21)) then v87[v89[2]]=v87[v89[1 + 2]];else v87[v89[1249 -(16 + 1231)]][v89[2 + 1]]=v87[v89[3 + 1]];end elseif ((v90>(1 + 22)) or (((8964 -(639 + 897)) -2627)<=(3572 -(903 + 599 + 175)))) then v87[v89[1 + 1]]=v87[v89[3]][v87[v89[4]]];elseif ((v87[v89[2]]~=v89[4]) or ((3156 -(751 + 372))>=(5535 -(332 + 489)))) then v70=v70 + (676 -(32 + 32 + 611));else v70=v89[3];end elseif (((1435 + 1051)<=4142) and (v90<=36)) then if (((5376 -(932 + 473))>(3282 -(280 + 69))) and (v90<=(116 -86))) then if ((v90<=(1987 -((4056 -2522) + 426))) or ((3655 -(394 + 82 + 324))>(2204 + 1520))) then if (((326 -73)<=(3215 -1341)) and (v90<=(13 + 12))) then v87[v89[3 -(1172 -(124 + 1047))]]=v87[v89[6 -3]] * v87[v89[4]];elseif ((v90>(11 + 15)) or ((4128 -2540)<(3138 -2149))) then local v190=0;local v191;while true do if ((v190==(1354 -(924 + 430))) or (1899==397)) then v191=v89[2 -0];do return v13(v87,v191,v71);end break;end end else v87[v89[2]]={};end elseif ((v90<=(43 -15)) or (716>(3893 -(6 + 1356)))) then v70=v89[(3736 -2231) -(383 + 1119)];elseif ((v90>(526 -(23 + (749 -275)))) or ((2546 -(147 + 182))<=(2399 -1879))) then v87[v89[1 + 1]]=v37[v89[1095 -(214 + 878)]];else local v195=0 -0;local v196;local v197;local v198;local v199;local v200;local v201;while true do if ((v195==(978 -(759 + 219))) or (4674==(1359 + 2589))) then v196=(0 -0) + 0;v197=nil;v195=497 -(394 + 102);end if ((v195==(1 + 0)) or ((353 + 603)>1477)) then v198=nil;v199=nil;v195=9 -7;end if ((212<=(10805 -6208)) and (v195==(3 + 0))) then while true do if (((154 + 2317)==2471) and (1==v196)) then local v271=0 -0;while true do if ((v271==(1554 -(1389 + 165))) or (716>=(5654 -(1026 + 337)))) then v199=v197 + (1013 -(374 + 637));v200={v87[v197](v87[v197 + 1],v87[v199])};v271=375 -(230 + 144);end if ((v271==((345 -175) -((15 -4) + 158))) or ((2073 -(61 + 229))==2439)) then v196=2;break;end end end if ((1688<=(1272 + 2195)) and (v196==(2 + 1))) then if (v201 or (((6329 -(155 + 1558)) -(561 + 229))>(4791 -(478 + 162)))) then local v300=365 -(262 + 103);local v301;while true do if (((717 + 2151)==(10832 -(9952 -(834 + 1154)))) and (v300==(1805 -(1377 + (1960 -(1017 + 515)))))) then v301=0;while true do if (((2477 + 339)>(4146 -3080)) and (v301==0)) then v87[v199]=v201;v70=v89[1 + 2];break;end end break;end end else v70=v70 + (504 -(326 + (533 -(312 + 44))));end break;end if ((v196==(0 -(74 -(68 + 6)))) or ((288 + 1914)>=(124 + 4250))) then v197=v89[758 -(368 + 174 + 214)];v198=v89[19 -15];v196=1 + 0;end if (((2459 + 1287)==((2976 + 1761) -(529 + 462))) and (v196==2)) then local v274=0;while true do if (((4657 -2841)>((7868 -5950) -(407 + 83))) and (v274==(0 -0))) then for v327=3 -2,v198 do v87[v199 + v327]=v200[v327];end v201=v200[713 -(107 + (857 -252))];v274=1;end if ((2225<(3668 + 1030)) and (v274==(1 + 0))) then v196=3;break;end end end end break;end if (((212 -94)<(1845 + 1843)) and (v195==2)) then v200=nil;v201=nil;v195=3;end end end elseif ((v90<=33) or (1028>=(3977 -1928))) then if ((v90<=(1233 -(934 + 268))) or ((817 + (4124 -(121 + 1281)))>=(14004 -9941))) then if (((3596 + 48 + 420)==4064) and (v87[v89[1836 -(993 + 841)]]==v87[v89[1185 -(363 + 818)]])) then v70=v70 + 1 + 0;else v70=v89[1 + 2];end elseif (((5792 -(1192 + 72))<=(3939 + 885)) and (v90>((5226 -3275) -(936 + 983)))) then v87[v89[1500 -(470 + 1028)]]=v87[v89[3]] + v87[v89[1357 -(1303 + 50)]];else local v204=0;local v205;local v206;local v207;while true do if (((1890 -1180)==(1612 -(1869 -(271 + 696)))) and (v204==(1055 -(682 + 373)))) then v205=0;v206=nil;v204=2 -1;end if (((1002 -(61 + 38))==(2606 -(3532 -1829))) and (((6 -3) -2)==v204)) then v207=nil;while true do if ((v205==0) or ((16 + 160)>=((6777 -(130 + 788)) -(507 + 1485)))) then local v275=0 -0;local v276;while true do if (((959 -(345 + 614))==v275) or ((3837 + 37)<=(8097 -5752))) then v276=0 -0;while true do if ((v276==(0 -0)) or (4325<=(3794 -(969 + 204)))) then v206=v89[2];v207=v87[v89[3]];v276=246 -(136 + 109);end if ((v276==(2 -(1 + 0))) or ((5190 -3204)>=4612)) then v205=385 -(152 + 232);break;end end break;end end end if ((v205==1) or ((4223 + 421)<(3903 -(77 + 283)))) then v87[v206 + 1 + 0]=v207;v87[v206]=v207[v89[302 -(218 + 80)]];break;end end break;end end end elseif ((v90<=(77 -43)) or ((1792 -(728 + 782))>=(6011 -(30 + 144 + 1181)))) then v87[v89[681 -(659 + 20)]]=v87[v89[726 -(187 + 536)]][v89[(27 -16) -7]];elseif (((9310 -7147)==(386 + 1777)) and (v90==35)) then local v208=0 + 0;local v209;while true do if ((v208==(1631 -(858 + 773))) or ((2434 -(188 + 650))>=(1716 + 1107))) then v209=v89[2];v87[v209](v87[v209 + (788 -(364 + 423))]);break;end end else v87[v89[2 + 0]]=v34(v82[v89[1 + 2]],nil,v37);end elseif ((v90<=((435 + 287) -(43 + 637))) or ((2974 -(480 + 1659))>(1742 + 1025))) then if ((v90<=(13 + 26)) or ((5181 -((1957 -798) + 622))<(7207 -4909))) then if ((v90<=(75 -38)) or ((1961 -((96 -54) + 44))==(5922 -(854 + 1114)))) then v87[v89[2]]=v36[v89[1 + (1438 -(689 + 747))]];elseif (((949 + 174 + 1025)<(3925 -(25 + 16))) and (v90==(1795 -(1411 + 346)))) then if ((v87[v89[2]]<v89[4 + 0]) or ((9919 -5142)>=(4060 + 850))) then v70=v70 + (3 -2);else v70=v89[3];end else do return;end end elseif (((2310 -(1041 + 883))<=(281 + 3307)) and (v90<=(28 + 12))) then local v156=0 -(0 -0);local v157;local v158;while true do if (((1882 -(1239 + 34))>=(6 + 13)) and ((2 -1)==v156)) then while true do if ((v157==(0 -(0 -0))) or (1666==1616)) then v158=v89[3 -1];do return v13(v87,v158,v158 + v89[(5 + 2) -4]);end break;end end break;end if (((3439 -(56 + 54))>((8827 -(646 + 917)) -4753)) and (v156==(0 + 0))) then v157=0 + 0;v158=nil;v156=1666 -(148 + 1517);end end elseif ((1824==(2581 -757)) and (v90==(1456 -(528 + 887)))) then local v211=753 -(424 + 329);local v212;local v213;while true do if ((v211==(1 + 0)) or ((2748 -(650 + 392))>=(2994 + 582))) then while true do if ((v212==(0 -0)) or (((4332 -(79 + 21)) -2685)<((765 + 530) -880))) then v213=v89[2 + 0];v87[v213]=v87[v213](v87[v213 + 1]);break;end end break;end if ((v211==((0 -0) + 0)) or ((91 + 339)>(3601 -(8045 -5898)))) then local v248=0 + 0;while true do if ((v248==(1 + 0)) or ((15558 -12026)<=(1158 -((1916 -(203 + 1639)) + 321)))) then v211=(6 -2) -3;break;end if ((v248==(312 -(215 + 97))) or ((8409 -4482)<3677)) then v212=0 -(0 -0);v213=nil;v248=1 -0;end end end end else local v214=0 + 0;local v215;local v216;local v217;local v218;local v219;local v220;while true do if ((v214==(875 -(185 + 689))) or ((253 + 1972)>=(6114 -(109 + (3902 -2863))))) then v217=nil;v218=nil;v214=2;end if (((2320 + 216)>(1571 -(56 + 789 + 11))) and (v214==((724 -(83 + 628)) -10))) then while true do if ((v215==(1918 -(1754 + 164))) or ((2509 -1745)>(120 + 1318))) then v216=0 + 0;v217=nil;v215=1;end if (((535 + 2188)<(10677 -5973)) and (v215==((2992 -(697 + 1207)) -((620 -(144 + 30)) + 641)))) then v218=nil;v219=nil;v215=2;end if ((3356>=(8769 -6267)) and (v215==2)) then v220=nil;while true do if (((2524 -696)<=(10592 -7948)) and ((13 -(4 + 7))==v216)) then for v330=v217,v71 do local v331=1246 -(674 + 572);local v332;while true do if (((104 + 896)<2756) and (v331==(0 -0))) then v332=0 -0;while true do if (((3164 -1797)<=(3169 -(13 + 1639))) and (v332==(0 -0))) then v220=v220 + 1;v87[v330]=v218[v220];break;end end break;end end end break;end if (((1512 + 1726)>=((2448 -(339 + 798)) -(948 + 310))) and (v216==(0 -0))) then local v317=0 -0;local v318;while true do if ((v317==0) or ((4091 -(651 + 368))==(2746 -(59 + 124 + 521)))) then v318=0 -0;while true do if ((4222<(908 + 3809)) and (v318==(1 -0))) then v216=1 + 0;break;end if ((v318==(0 + 0)) or (((4509 + 286) -(541 + 471))<=(3550 -(37 + 2 + 10)))) then v217=v89[3 -1];v218,v219=v84(v87[v217](v87[v217 + 1 + 0]));v318=1 + 0 + 0;end end break;end end end if ((v216==(1 + 0 + 0)) or ((4800 -(1881 + 35))>=(140 + 4790))) then local v319=(0 + 0) -0;local v320;while true do if ((v319==(0 + 0)) or (4594<=(9127 -5332))) then v320=0 + 0;while true do if ((v320==((0 + 0) -0)) or ((254 + 54)>=(8288 -5412))) then local v356=0 + 0 + 0;while true do if ((v356==(1079 -(551 + 527))) or ((2290 -1213)>=(5541 -(725 + 591)))) then v320=1 + 0;break;end if (((0 -0)==v356) or (((676 -(7 + 591)) -36)>=(3881 -1676))) then v71=(v219 + v217) -(1964 -(1014 + (3224 -2275)));v220=819 -(631 + (1556 -(1301 + 67)));v356=1 -0;end end end if (((3925 + 552)>(8691 -4814)) and (v320==((251 + 324) -(92 + 482)))) then v216=2;break;end end break;end end end end break;end end break;end if ((v214==(1187 -(191 + 996))) or ((4315 + 402)==(1464 + 625))) then v215=1280 -(1208 + 72);v216=nil;v214=1 + 0 + 0;end if ((v214==(4 -2)) or (2960<(1394 -(149 + 455)))) then v219=nil;v220=nil;v214=3 -0;end end end elseif ((v90<=(22 + 23)) or ((1489 + 2556)<(662 + 2234))) then if (((3478 -(66 + (765 -562)))>(2558 -701)) and (v90<=(7 + 36))) then v87[v89[2]]();elseif (((4736 -(537 + 1082))==(7 + 26 + 3084)) and (v90>(13 + 31))) then v37[v89[3]]=v87[v89[691 -(322 + 367)]];elseif ((v89[617 -(491 + 124)]==v87[v89[5 -1]]) or ((134 + 134)>=(3677 -(514 + 452)))) then v70=v70 + ((1896 -1199) -(176 + 520));else v70=v89[3 -0];end elseif (((7227 -3167)<=(45 + 4759)) and (v90<=(108 -61))) then if ((v90>(789 -((2602 -1913) + 54))) or ((4743 -843)==(2894 -(13 + 728)))) then local v223=297 -(13 + 284);local v224;local v225;while true do if (((2071 -(37 + 797))<=(4666 -1507)) and (v223==(1 + 0))) then for v261=v224 + (1 -0),v89[(1762 -(105 + 1652)) -1] do v225=v225   .. v87[v261];end v87[v89[2]]=v225;break;end if (((2004 -(462 + 1324))<=1623) and (v223==(0 -0))) then local v250=(703 + 340) -(714 + 329);while true do if (((4058 -2549)>(792 -479)) and ((345 -(342 + 3))==v250)) then v224=v89[1 + 2];v225=v87[v224];v250=1 + 0;end if ((2582<(9919 -6168)) and (v250==(2 -1))) then v223=3 -2;break;end end end end else do return v87[v89[710 -(636 + 72)]];end end elseif (((7751 -5366)>=(2494 -(743 + 599))) and (v90>(21 + 27))) then local v226=0;local v227;local v228;while true do if ((v226==(1 + 0)) or (70==4474)) then while true do if (((6223 -4020)>=(1603 -(81 + 76))) and (v227==(982 -(76 + 906)))) then v228=v89[2];v87[v228]=v87[v228](v13(v87,v228 + 1,v89[49 -(39 + 7)]));break;end end break;end if (((4400 -(1400 + 125))>=(777 + 450)) and (v226==((1498 -(253 + 1245)) -0))) then v227=0 + 0;v228=nil;v226=(3 -2) + 0;end end else v87[v89[1597 -(69 + (1779 -(85 + 168)))]]=v89[3 + 0]~=0;end v70=v70 + 1 + 0;break;end if (((1999 + 589)<(10382 -7658)) and (v96==((4286 -2557) -(578 + 658 + 493)))) then local v106=0 + 0 + 0;while true do if ((v106==1) or (2200<95)) then v96=1675 -(1429 + 245);break;end if (((1055 + 49)<=(3813 -(163 + 66))) and (v106==(1751 -(910 + 841)))) then v89=v81[v70];v90=v89[484 -(313 + 170)];v106=1;end end end end break;end end end end;v69=3;end if (v69==3) then A,B=v32(v11(v74));if  not A[1] then local v97=v35[4][v70] or "?";error("Script error at ["   .. v97   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end if (v69==0) then v70=1;v71= -1;v69=1;end if (v69==1) then v72={...};v73=v12("#",...) -1;v69=2;end end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
